/*
 * Created on 4 may 2017 ( Time 11:16:38 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.mx.portal.entity;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;
import java.util.List;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "usuario"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="usuario", schema="loggin", catalog="TAKEDA" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="Usuario.countAll", query="SELECT COUNT(x) FROM Usuario x" )
} )
public class Usuario implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="id", nullable=false)
    private Integer    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="nombre", nullable=false)
    private String     nombre       ;

    @Column(name="appaterno", nullable=false)
    private String     appaterno    ;

    @Column(name="apmaterno", nullable=false)
    private String     apmaterno    ;

    @Column(name="nombrecorto", nullable=false)
    private String     nombrecorto  ;

    @Column(name="curp")
    private String     curp         ;

    @Column(name="contrasenia", nullable=false)
    private String     contrasenia  ;

    @Column(name="vecesintentologuearse", nullable=false)
    private Integer    vecesintentologuearse ;

    @Column(name="idcatalogo", nullable=false)
    private Integer    idcatalogo   ;

    @Column(name="intentospermitidos", nullable=false)
    private Integer    intentospermitidos ;

    @Column(name="rfc")
    private String     rfc          ;

    @Column(name="email")
    private String     email        ;

    @Column(name="idcatalogocaducidad")
    private Integer    idcatalogocaducidad ;

    @Column(name="numdiascaducar", nullable=false)
    private Integer    numdiascaducar ;

    @Column(name="activo")
    private Byte       activo       ;

    @Column(name="usuariocreacion")
    private String     usuariocreacion ;

    @Column(name="usuariomodificacion")
    private String     usuariomodificacion ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="fechacreacion")
    private Date       fechacreacion ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="fechamodificacion", nullable=false)
    private Date       fechamodificacion ;

	// "idrol" (column "idrol") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @OneToMany(mappedBy="usuario", targetEntity=LogsAcceso.class)
    private List<LogsAcceso> listOfLogsAcceso;

    @OneToMany(mappedBy="usuario", targetEntity=Respuestas.class)
    private List<Respuestas> listOfRespuestas;

    @ManyToOne
    @JoinColumn(name="idrol", referencedColumnName="id")
    private Rol rol         ;

    @OneToMany(mappedBy="usuario", targetEntity=HistoricoPassword.class)
    private List<HistoricoPassword> listOfHistoricoPassword;

    @OneToMany(mappedBy="usuario", targetEntity=Excepciones.class)
    private List<Excepciones> listOfExcepciones;

    @OneToMany(mappedBy="usuario", targetEntity=Sesion.class)
    private List<Sesion> listOfSesion;

    @OneToMany(mappedBy="usuario", targetEntity=UsuarioDet.class)
    private List<UsuarioDet> listOfUsuarioDet;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public Usuario() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Integer id ) {
        this.id = id ;
    }
    public Integer getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : nombre ( nvarchar ) 
    public void setNombre( String nombre ) {
        this.nombre = nombre;
    }
    public String getNombre() {
        return this.nombre;
    }

    //--- DATABASE MAPPING : appaterno ( nvarchar ) 
    public void setAppaterno( String appaterno ) {
        this.appaterno = appaterno;
    }
    public String getAppaterno() {
        return this.appaterno;
    }

    //--- DATABASE MAPPING : apmaterno ( nvarchar ) 
    public void setApmaterno( String apmaterno ) {
        this.apmaterno = apmaterno;
    }
    public String getApmaterno() {
        return this.apmaterno;
    }

    //--- DATABASE MAPPING : nombrecorto ( nvarchar ) 
    public void setNombrecorto( String nombrecorto ) {
        this.nombrecorto = nombrecorto;
    }
    public String getNombrecorto() {
        return this.nombrecorto;
    }

    //--- DATABASE MAPPING : curp ( nvarchar ) 
    public void setCurp( String curp ) {
        this.curp = curp;
    }
    public String getCurp() {
        return this.curp;
    }

    //--- DATABASE MAPPING : contrasenia ( nvarchar ) 
    public void setContrasenia( String contrasenia ) {
        this.contrasenia = contrasenia;
    }
    public String getContrasenia() {
        return this.contrasenia;
    }

    //--- DATABASE MAPPING : vecesintentologuearse ( int ) 
    public void setVecesintentologuearse( Integer vecesintentologuearse ) {
        this.vecesintentologuearse = vecesintentologuearse;
    }
    public Integer getVecesintentologuearse() {
        return this.vecesintentologuearse;
    }

    //--- DATABASE MAPPING : idcatalogo ( int ) 
    public void setIdcatalogo( Integer idcatalogo ) {
        this.idcatalogo = idcatalogo;
    }
    public Integer getIdcatalogo() {
        return this.idcatalogo;
    }

    //--- DATABASE MAPPING : intentospermitidos ( int ) 
    public void setIntentospermitidos( Integer intentospermitidos ) {
        this.intentospermitidos = intentospermitidos;
    }
    public Integer getIntentospermitidos() {
        return this.intentospermitidos;
    }

    //--- DATABASE MAPPING : rfc ( nvarchar ) 
    public void setRfc( String rfc ) {
        this.rfc = rfc;
    }
    public String getRfc() {
        return this.rfc;
    }

    //--- DATABASE MAPPING : email ( nvarchar ) 
    public void setEmail( String email ) {
        this.email = email;
    }
    public String getEmail() {
        return this.email;
    }

    //--- DATABASE MAPPING : idcatalogocaducidad ( int ) 
    public void setIdcatalogocaducidad( Integer idcatalogocaducidad ) {
        this.idcatalogocaducidad = idcatalogocaducidad;
    }
    public Integer getIdcatalogocaducidad() {
        return this.idcatalogocaducidad;
    }

    //--- DATABASE MAPPING : numdiascaducar ( int ) 
    public void setNumdiascaducar( Integer numdiascaducar ) {
        this.numdiascaducar = numdiascaducar;
    }
    public Integer getNumdiascaducar() {
        return this.numdiascaducar;
    }

    //--- DATABASE MAPPING : activo ( tinyint ) 
    public void setActivo( Byte activo ) {
        this.activo = activo;
    }
    public Byte getActivo() {
        return this.activo;
    }

    //--- DATABASE MAPPING : usuariocreacion ( nvarchar ) 
    public void setUsuariocreacion( String usuariocreacion ) {
        this.usuariocreacion = usuariocreacion;
    }
    public String getUsuariocreacion() {
        return this.usuariocreacion;
    }

    //--- DATABASE MAPPING : usuariomodificacion ( nvarchar ) 
    public void setUsuariomodificacion( String usuariomodificacion ) {
        this.usuariomodificacion = usuariomodificacion;
    }
    public String getUsuariomodificacion() {
        return this.usuariomodificacion;
    }

    //--- DATABASE MAPPING : fechacreacion ( datetime ) 
    public void setFechacreacion( Date fechacreacion ) {
        this.fechacreacion = fechacreacion;
    }
    public Date getFechacreacion() {
        return this.fechacreacion;
    }

    //--- DATABASE MAPPING : fechamodificacion ( datetime ) 
    public void setFechamodificacion( Date fechamodificacion ) {
        this.fechamodificacion = fechamodificacion;
    }
    public Date getFechamodificacion() {
        return this.fechamodificacion;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setListOfLogsAcceso( List<LogsAcceso> listOfLogsAcceso ) {
        this.listOfLogsAcceso = listOfLogsAcceso;
    }
    public List<LogsAcceso> getListOfLogsAcceso() {
        return this.listOfLogsAcceso;
    }

    public void setListOfRespuestas( List<Respuestas> listOfRespuestas ) {
        this.listOfRespuestas = listOfRespuestas;
    }
    public List<Respuestas> getListOfRespuestas() {
        return this.listOfRespuestas;
    }

    public void setRol( Rol rol ) {
        this.rol = rol;
    }
    public Rol getRol() {
        return this.rol;
    }

    public void setListOfHistoricoPassword( List<HistoricoPassword> listOfHistoricoPassword ) {
        this.listOfHistoricoPassword = listOfHistoricoPassword;
    }
    public List<HistoricoPassword> getListOfHistoricoPassword() {
        return this.listOfHistoricoPassword;
    }

    public void setListOfExcepciones( List<Excepciones> listOfExcepciones ) {
        this.listOfExcepciones = listOfExcepciones;
    }
    public List<Excepciones> getListOfExcepciones() {
        return this.listOfExcepciones;
    }

    public void setListOfSesion( List<Sesion> listOfSesion ) {
        this.listOfSesion = listOfSesion;
    }
    public List<Sesion> getListOfSesion() {
        return this.listOfSesion;
    }

    public void setListOfUsuarioDet( List<UsuarioDet> listOfUsuarioDet ) {
        this.listOfUsuarioDet = listOfUsuarioDet;
    }
    public List<UsuarioDet> getListOfUsuarioDet() {
        return this.listOfUsuarioDet;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(nombre);
        sb.append("|");
        sb.append(appaterno);
        sb.append("|");
        sb.append(apmaterno);
        sb.append("|");
        sb.append(nombrecorto);
        sb.append("|");
        sb.append(curp);
        sb.append("|");
        sb.append(contrasenia);
        sb.append("|");
        sb.append(vecesintentologuearse);
        sb.append("|");
        sb.append(idcatalogo);
        sb.append("|");
        sb.append(intentospermitidos);
        sb.append("|");
        sb.append(rfc);
        sb.append("|");
        sb.append(email);
        sb.append("|");
        sb.append(idcatalogocaducidad);
        sb.append("|");
        sb.append(numdiascaducar);
        sb.append("|");
        sb.append(activo);
        sb.append("|");
        sb.append(usuariocreacion);
        sb.append("|");
        sb.append(usuariomodificacion);
        sb.append("|");
        sb.append(fechacreacion);
        sb.append("|");
        sb.append(fechamodificacion);
        return sb.toString(); 
    } 

}
