/*
 * Created on 4 may 2017 ( Time 11:16:37 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.mx.portal.entity;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "respuestas"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="respuestas", schema="loggin", catalog="TAKEDA" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="Respuestas.countAll", query="SELECT COUNT(x) FROM Respuestas x" )
} )
public class Respuestas implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="id", nullable=false)
    private Integer    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="idcatalogo", nullable=false)
    private Integer    idcatalogo   ;

    @Column(name="idpregunta", nullable=false)
    private Integer    idpregunta   ;

    @Column(name="respuesta", nullable=false)
    private String     respuesta    ;

    @Column(name="activo")
    private Byte       activo       ;

    @Column(name="usuariocreacion")
    private String     usuariocreacion ;

    @Column(name="usuariomodificacion")
    private String     usuariomodificacion ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="fechacreacion")
    private Date       fechacreacion ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="fechamodificacion", nullable=false)
    private Date       fechamodificacion ;

	// "idusuario" (column "idusuario") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @ManyToOne
    @JoinColumn(name="idusuario", referencedColumnName="id")
    private Usuario usuario     ;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public Respuestas() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Integer id ) {
        this.id = id ;
    }
    public Integer getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : idcatalogo ( int ) 
    public void setIdcatalogo( Integer idcatalogo ) {
        this.idcatalogo = idcatalogo;
    }
    public Integer getIdcatalogo() {
        return this.idcatalogo;
    }

    //--- DATABASE MAPPING : idpregunta ( int ) 
    public void setIdpregunta( Integer idpregunta ) {
        this.idpregunta = idpregunta;
    }
    public Integer getIdpregunta() {
        return this.idpregunta;
    }

    //--- DATABASE MAPPING : respuesta ( nvarchar ) 
    public void setRespuesta( String respuesta ) {
        this.respuesta = respuesta;
    }
    public String getRespuesta() {
        return this.respuesta;
    }

    //--- DATABASE MAPPING : activo ( tinyint ) 
    public void setActivo( Byte activo ) {
        this.activo = activo;
    }
    public Byte getActivo() {
        return this.activo;
    }

    //--- DATABASE MAPPING : usuariocreacion ( nvarchar ) 
    public void setUsuariocreacion( String usuariocreacion ) {
        this.usuariocreacion = usuariocreacion;
    }
    public String getUsuariocreacion() {
        return this.usuariocreacion;
    }

    //--- DATABASE MAPPING : usuariomodificacion ( nvarchar ) 
    public void setUsuariomodificacion( String usuariomodificacion ) {
        this.usuariomodificacion = usuariomodificacion;
    }
    public String getUsuariomodificacion() {
        return this.usuariomodificacion;
    }

    //--- DATABASE MAPPING : fechacreacion ( datetime ) 
    public void setFechacreacion( Date fechacreacion ) {
        this.fechacreacion = fechacreacion;
    }
    public Date getFechacreacion() {
        return this.fechacreacion;
    }

    //--- DATABASE MAPPING : fechamodificacion ( datetime ) 
    public void setFechamodificacion( Date fechamodificacion ) {
        this.fechamodificacion = fechamodificacion;
    }
    public Date getFechamodificacion() {
        return this.fechamodificacion;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setUsuario( Usuario usuario ) {
        this.usuario = usuario;
    }
    public Usuario getUsuario() {
        return this.usuario;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(idcatalogo);
        sb.append("|");
        sb.append(idpregunta);
        sb.append("|");
        sb.append(respuesta);
        sb.append("|");
        sb.append(activo);
        sb.append("|");
        sb.append(usuariocreacion);
        sb.append("|");
        sb.append(usuariomodificacion);
        sb.append("|");
        sb.append(fechacreacion);
        sb.append("|");
        sb.append(fechamodificacion);
        return sb.toString(); 
    } 

}
